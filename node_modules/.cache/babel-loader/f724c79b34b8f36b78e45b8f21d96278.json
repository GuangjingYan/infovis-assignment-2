{"ast":null,"code":"var _jsxFileName = \"/Users/yanguangjing/Downloads/snu-infovis-assn-2-skeleton-master/src/components/Mainplot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { Update } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mainplot = props => {\n  _s();\n\n  const {\n    width,\n    height,\n    margin,\n    pointSize,\n    maxPointSize,\n    data,\n    movieData,\n    setBrushedIndex\n  } = props;\n  const {\n    xPosition,\n    yPosition,\n    color,\n    opacity,\n    size\n  } = data;\n  const svgWidth = margin * 2 + width;\n  const svgHeight = margin * 2 + height;\n  const splotSvg = useRef(null);\n  const isUpdate = useRef(); // const [xExtent, setxExtent] = useState(d3.extent(movieData.map(d => parseFloat(d[xPosition]))));\n  // const [yExtent, setyExtent] = useState(d3.extent(movieData.map(d => parseFloat(d[yPosition]))));\n\n  const colors = d3.scaleOrdinal(d3.schemeAccent);\n  let brush = d3.brush().extent([[0, 0], [width, height]]);\n\n  const drawSplot = () => {\n    console.log(`draw`);\n    const xExtent = d3.extent(movieData.map(d => parseFloat(d[xPosition])));\n    const yExtent = d3.extent(movieData.map(d => parseFloat(d[yPosition])));\n    const xScale = d3.scaleLinear().domain(xExtent).range([0, width]);\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n    const svg = d3.select(splotSvg.current).attr(\"class\", \"Splot\");\n    const xAxisSvg = d3.select(splotSvg.current).append(\"g\").attr(\"transform\", `translate(${margin},${height + margin})`).attr(\"class\", \"xAxisSvg\");\n    xAxisSvg.call(xAxis);\n    const yAxisSvg = d3.select(splotSvg.current).append(\"g\").attr(\"transform\", `translate(${margin}, ${margin})`).attr(\"class\", \"yAxisSvg\");\n    yAxisSvg.call(yAxis);\n    const circleSvg = svg.append(\"g\").attr(\"transform\", `translate(${margin}, ${margin})`).attr(\"class\", \"circleSvg\");\n    circleSvg.selectAll(\"circle\").data(movieData).enter().append(\"circle\").attr(\"cx\", d => xScale(parseFloat(d[xPosition]))).attr(\"cy\", d => yScale(parseFloat(d[yPosition]))).attr(\"class\", (_, i) => \"circle\" + i).attr(\"r\", pointSize).attr(\"fill\", \"black\");\n    const brushSvg = svg.append(\"g\").attr(\"transform\", \"translate(\" + props.margin + \",\" + props.margin + \")\").attr(\"class\", \"brushSvg\");\n    brush.on(\"start brush end\", brushed);\n    brushSvg.call(brush);\n  };\n\n  const updateSplot = () => {\n    const xExtent = d3.extent(movieData.map(d => parseFloat(d[xPosition])));\n    const yExtent = d3.extent(movieData.map(d => parseFloat(d[yPosition])));\n    const rExtent = d3.extent(movieData.map(d => parseFloat(d[size])));\n    const oExtent = d3.extent(movieData.map(d => parseFloat(d[opacity])));\n    const xScale = d3.scaleLinear().domain(xExtent).range([0, width]);\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n    const rScale = d3.scaleLinear().domain(rExtent).range([pointSize, maxPointSize]);\n    const oScale = d3.scaleLinear().domain(oExtent).range([0, 1]);\n    const xAxis = d3.axisBottom(xScale);\n    const xAxisSvg = d3.select(\".xAxisSvg\");\n    xAxisSvg.call(xAxis);\n    const yAxis = d3.axisLeft(yScale);\n    const yAxisSvg = d3.select(\".yAxisSvg\");\n    yAxisSvg.call(yAxis);\n    const circleSvg = d3.select(\".circleSvg\");\n    const circle = circleSvg.selectAll(\"circle\");\n    circle.data(movieData).join().transition().duration(100).attr(\"cx\", d => xScale(parseFloat(d[xPosition]))).attr(\"cy\", d => yScale(parseFloat(d[yPosition]))); // set circle radius\n\n    if (size === \"none\") circle.attr(\"r\", pointSize);else {\n      circle.data(movieData).join().attr(\"r\", d => rScale(parseFloat(d[size])));\n    } //set circle opacity\n\n    if (opacity === \"none\") circle.attr(\"opacity\", 1);else {\n      circle.data(movieData).join().attr(\"opacity\", d => oScale(parseFloat(d[opacity])));\n    } //set circle color\n\n    if (color === \"none\") circle.attr(\"fill\", \"black\");else {\n      const colorMap = new Map();\n      movieData.forEach((e, i) => {\n        if (colorMap.has(e[color])) return;else colorMap.set(e[color], i);\n      });\n      movieData.forEach((e, i) => {\n        circleSvg.select(`.circle${i}`).attr(\"fill\", e => colors(colorMap.get(e[color])));\n      });\n    } //brush\n\n    const brushSvg = d3.select(\".brushSvg\");\n    brush.on(\"start brush end\", brushed);\n    brushSvg.call(brush);\n  };\n\n  function brushed({\n    selection\n  }) {\n    const xExtent = d3.extent(movieData.map(d => parseFloat(d[xPosition])));\n    const yExtent = d3.extent(movieData.map(d => parseFloat(d[yPosition])));\n    const xScale = d3.scaleLinear().domain(xExtent).range([0, width]);\n    const yScale = d3.scaleLinear().domain(yExtent).range([height, 0]);\n\n    if (selection === null) {\n      return;\n    }\n\n    let [[x0, y0], [x1, y1]] = selection;\n    const insideBrush = movieData.map((d, i) => {\n      const xCoor = xScale(parseFloat(d[xPosition]));\n      const yCoor = yScale(parseFloat(d[yPosition]));\n      if (xCoor >= x0 && xCoor <= x1 && yCoor >= y0 && yCoor <= y1) return true;else return false;\n    });\n    const insideBrushIdx = insideBrush.reduce((acc, cur, i) => {\n      if (cur) acc.push(i);\n      return acc;\n    }, []);\n    setBrushedIndex(insideBrushIdx);\n    d3.selectAll(\"circle\").attr(\"stroke\", \"none\");\n    insideBrushIdx.forEach(idx => {\n      d3.selectAll(\".circle\" + idx).attr(\"stroke\", \"black\");\n    });\n  }\n\n  useEffect(() => {\n    if (!isUpdate.current) {\n      drawSplot();\n      isUpdate.current = true;\n    } else d3.select(\".brushSvg\").call(brush.move, null);\n\n    setBrushedIndex([]);\n    d3.selectAll(\".circle\").attr(\"stroke\", \"none\");\n    updateSplot();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: splotSvg,\n      width: svgWidth,\n      height: svgHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Mainplot, \"odYfPG6fR/S7fWIJ77n6IyUy9Ss=\");\n\n_c = Mainplot;\nexport default Mainplot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainplot\");","map":{"version":3,"sources":["/Users/yanguangjing/Downloads/snu-infovis-assn-2-skeleton-master/src/components/Mainplot.js"],"names":["React","useRef","useEffect","useState","d3","Update","Mainplot","props","width","height","margin","pointSize","maxPointSize","data","movieData","setBrushedIndex","xPosition","yPosition","color","opacity","size","svgWidth","svgHeight","splotSvg","isUpdate","colors","scaleOrdinal","schemeAccent","brush","extent","drawSplot","console","log","xExtent","map","d","parseFloat","yExtent","xScale","scaleLinear","domain","range","yScale","xAxis","axisBottom","yAxis","axisLeft","svg","select","current","attr","xAxisSvg","append","call","yAxisSvg","circleSvg","selectAll","enter","_","i","brushSvg","on","brushed","updateSplot","rExtent","oExtent","rScale","oScale","circle","join","transition","duration","colorMap","Map","forEach","e","has","set","get","selection","x0","y0","x1","y1","insideBrush","xCoor","yCoor","insideBrushIdx","reduce","acc","cur","push","idx","move"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport { Update } from \"@material-ui/icons\";\n\nconst Mainplot = (props) => {\n  const { width, height, margin, pointSize, maxPointSize, data, movieData, setBrushedIndex } = props;\n  const { xPosition, yPosition, color, opacity, size} = data;\n\n  const svgWidth = margin * 2 + width;\n  const svgHeight = margin * 2 + height;\n  const splotSvg = useRef(null);\n  const isUpdate = useRef();\n  // const [xExtent, setxExtent] = useState(d3.extent(movieData.map(d => parseFloat(d[xPosition]))));\n  // const [yExtent, setyExtent] = useState(d3.extent(movieData.map(d => parseFloat(d[yPosition]))));\n  const colors = d3.scaleOrdinal(d3.schemeAccent);\n  let brush = d3.brush()\n                .extent([[0, 0], [width, height]])\n\n\n  const drawSplot = () =>{\n    console.log(`draw`);\n    const xExtent = d3.extent(movieData.map(d => parseFloat(d[xPosition])));\n    const yExtent = d3.extent(movieData.map(d => parseFloat(d[yPosition])));\n\n\n    const xScale  = d3.scaleLinear().domain(xExtent).range([0, width]);\n    const yScale  = d3.scaleLinear().domain(yExtent).range([height, 0]);\n  \n    const xAxis = d3.axisBottom(xScale)\n    const yAxis = d3.axisLeft(yScale)\n    const svg = d3.select(splotSvg.current).attr(\"class\", \"Splot\");\n\n\t\tconst xAxisSvg = d3.select(splotSvg.current)\n\t\t \t.append(\"g\")\n      .attr(\"transform\", `translate(${ margin },${ height + margin })`)\n      .attr(\"class\", \"xAxisSvg\")\n\t\t\n    xAxisSvg.call(xAxis)\n\n\t\tconst yAxisSvg = d3.select(splotSvg.current)\n\t\t  .append(\"g\")\n\t\t  .attr(\"transform\", `translate(${ margin }, ${ margin })`)\n      .attr(\"class\", \"yAxisSvg\")\n\t\t\t\n    yAxisSvg.call(yAxis)\n\n\t\tconst circleSvg = svg.append(\"g\").attr(\"transform\", `translate(${ margin }, ${ margin })`).attr(\"class\", \"circleSvg\")\n\n\t\tcircleSvg.selectAll(\"circle\")\n\t\t\t\t\t\t .data(movieData)\n\t\t\t\t\t\t .enter()\n\t\t\t\t\t\t .append(\"circle\")\n\t\t\t\t\t\t .attr(\"cx\", d => xScale(parseFloat(d[xPosition])))\n\t\t\t\t\t\t .attr(\"cy\", d => yScale(parseFloat(d[yPosition])))\n\t\t\t\t\t\t .attr(\"class\", (_, i) => \"circle\" + i)\n\t\t\t\t\t\t .attr(\"r\", pointSize)\n             .attr(\"fill\", \"black\")\n\n\t\t\n    const brushSvg = svg.append(\"g\")\n                        .attr(\"transform\", \"translate(\" + props.margin + \",\" + props.margin + \")\")\n                        .attr(\"class\", \"brushSvg\")\n    \n              brush.on(\"start brush end\", brushed)\n\n    \n    brushSvg.call(brush);\n\n  }\n\n  const updateSplot = () =>{\n    const xExtent = d3.extent(movieData.map(d => parseFloat(d[xPosition])));\n    const yExtent = d3.extent(movieData.map(d => parseFloat(d[yPosition])));\n\n    const rExtent = d3.extent(movieData.map(d => parseFloat(d[size])));\n    const oExtent = d3.extent(movieData.map(d => parseFloat(d[opacity])));\n\n    const xScale  = d3.scaleLinear().domain(xExtent).range([0, width]);\n    const yScale  = d3.scaleLinear().domain(yExtent).range([height, 0]);\n    const rScale = d3.scaleLinear().domain(rExtent).range([pointSize, maxPointSize]);\n    const oScale = d3.scaleLinear().domain(oExtent).range([0, 1]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const xAxisSvg = d3.select(\".xAxisSvg\")\n    xAxisSvg.call(xAxis);\n    const yAxis = d3.axisLeft(yScale);\n    const yAxisSvg = d3.select(\".yAxisSvg\")\n    yAxisSvg.call(yAxis);\n\n    const circleSvg = d3.select(\".circleSvg\")\n    const circle = circleSvg.selectAll(\"circle\")\n    circle.data(movieData)\n    .join()\n    .transition()\n    .duration(100)\n    .attr(\"cx\", d => xScale(parseFloat(d[xPosition])))\n    .attr(\"cy\", d => yScale(parseFloat(d[yPosition])))\n    // set circle radius\n    if(size === \"none\")\n      circle.attr(\"r\",pointSize);\n    else{\n      circle.data(movieData)\n      .join()\n      .attr(\"r\", d => rScale(parseFloat(d[size])))\n    }\n    //set circle opacity\n    if(opacity === \"none\")\n    circle.attr(\"opacity\",1);\n    else{\n    circle.data(movieData)\n    .join()\n    .attr(\"opacity\", d => oScale(parseFloat(d[opacity])))\n    }\n    //set circle color\n    if(color === \"none\")\n      circle.attr(\"fill\",\"black\");\n    else{\n      const colorMap = new Map();\n      movieData.forEach( (e,i) =>{\n        if( colorMap.has(e[color]))\n          return;\n        else\n          colorMap.set(e[color],i);\n      });\n      movieData.forEach( (e,i) =>{\n        circleSvg.select(`.circle${i}`)\n         .attr(\"fill\", e => colors(colorMap.get(e[color])))\n      });\n    }\n\n    //brush\n    const brushSvg = d3.select(\".brushSvg\")\n    brush.on(\"start brush end\", brushed);                     \n    brushSvg.call(brush);\n\n}\n\nfunction brushed({selection}) {\n  const xExtent = d3.extent(movieData.map(d => parseFloat(d[xPosition])));\n  const yExtent = d3.extent(movieData.map(d => parseFloat(d[yPosition])));\n\n  const xScale  = d3.scaleLinear().domain(xExtent).range([0, width]);\n  const yScale  = d3.scaleLinear().domain(yExtent).range([height, 0]);\n\n  if (selection === null) {\n    return;\n  }\n\n  let [[x0, y0], [x1, y1]] = selection;\n\n  const insideBrush = movieData.map((d, i) => {\n    const xCoor = xScale(parseFloat(d[xPosition]));\n    const yCoor = yScale(parseFloat(d[yPosition]));\n    if (xCoor >= x0 && xCoor <= x1 &&\n        yCoor >= y0 && yCoor <= y1\n    ) return true;\n    else return false;\n  })\n\n  const insideBrushIdx = insideBrush.reduce((acc, cur, i) => {\n    if (cur) acc.push(i);\n    return acc;\n  }, []);\n  setBrushedIndex(insideBrushIdx);\n  d3.selectAll(\"circle\").attr(\"stroke\", \"none\");\n  insideBrushIdx.forEach(idx => {\n    d3.selectAll(\".circle\" + idx)\n      .attr(\"stroke\", \"black\")\n  });\t\t\n}\n\n\n  useEffect(() => {\n    if(!isUpdate.current){\n      drawSplot();\n      isUpdate.current = true;\n    }else\n      d3.select(\".brushSvg\").call(brush.move, null);\n      setBrushedIndex([]);\n      d3.selectAll(\".circle\")\n      .attr(\"stroke\", \"none\");\n      updateSplot();\n\t}, [data]);\n    \n  return (\n\t\t<div>\n\t\t\t<svg ref={splotSvg} width={svgWidth} height={svgHeight}> \n\t\t\t</svg>\n    </div>\n  )\n\n}\nexport default Mainplot;"]},"metadata":{},"sourceType":"module"}