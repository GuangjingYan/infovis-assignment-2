{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yanguangjing/Desktop/infovis-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/yanguangjing/Desktop/infovis-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanguangjing/Desktop/infovis-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(flatIterable);\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\nvar tau = 2 * Math.PI,\n  pow = Math.pow;\nfunction pointX(p) {\n  return p[0];\n}\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  var triangles = d.triangles,\n    coords = d.coords;\n  for (var i = 0; i < triangles.length; i += 3) {\n    var a = 2 * triangles[i],\n      b = 2 * triangles[i + 1],\n      c = 2 * triangles[i + 2],\n      cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\nvar Delaunay = /*#__PURE__*/function () {\n  function Delaunay(points) {\n    _classCallCheck(this, Delaunay);\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  _createClass(Delaunay, [{\n    key: \"update\",\n    value: function update() {\n      this._delaunator.update();\n      this._init();\n      return this;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var d = this._delaunator,\n        points = this.points;\n\n      // check for collinear\n      if (d.hull && d.hull.length > 2 && collinear(d)) {\n        this.collinear = Int32Array.from({\n          length: points.length / 2\n        }, function (_, i) {\n          return i;\n        }).sort(function (i, j) {\n          return points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1];\n        }); // for exact neighbors\n        var e = this.collinear[0],\n          f = this.collinear[this.collinear.length - 1],\n          bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]],\n          r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n        for (var i = 0, n = points.length / 2; i < n; ++i) {\n          var p = jitter(points[2 * i], points[2 * i + 1], r);\n          points[2 * i] = p[0];\n          points[2 * i + 1] = p[1];\n        }\n        this._delaunator = new Delaunator(points);\n      } else {\n        delete this.collinear;\n      }\n      var halfedges = this.halfedges = this._delaunator.halfedges;\n      var hull = this.hull = this._delaunator.hull;\n      var triangles = this.triangles = this._delaunator.triangles;\n      var inedges = this.inedges.fill(-1);\n      var hullIndex = this._hullIndex.fill(-1);\n\n      // Compute an index from each point to an (arbitrary) incoming halfedge\n      // Used to give the first neighbor of each point; for this reason,\n      // on the hull we give priority to exterior halfedges\n      for (var _e = 0, _n = halfedges.length; _e < _n; ++_e) {\n        var _p = triangles[_e % 3 === 2 ? _e - 2 : _e + 1];\n        if (halfedges[_e] === -1 || inedges[_p] === -1) inedges[_p] = _e;\n      }\n      for (var _i = 0, _n2 = hull.length; _i < _n2; ++_i) {\n        hullIndex[hull[_i]] = _i;\n      }\n\n      // degenerate case: 1 or 2 (distinct) points\n      if (hull.length <= 2 && hull.length > 0) {\n        this.triangles = new Int32Array(3).fill(-1);\n        this.halfedges = new Int32Array(3).fill(-1);\n        this.triangles[0] = hull[0];\n        inedges[hull[0]] = 1;\n        if (hull.length === 2) {\n          inedges[hull[1]] = 0;\n          this.triangles[1] = hull[1];\n          this.triangles[2] = hull[1];\n        }\n      }\n    }\n  }, {\n    key: \"voronoi\",\n    value: function voronoi(bounds) {\n      return new Voronoi(this, bounds);\n    }\n  }, {\n    key: \"neighbors\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function neighbors(i) {\n      var inedges, hull, _hullIndex, halfedges, triangles, collinear, l, e0, e, p0, p;\n      return _regeneratorRuntime().wrap(function neighbors$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            inedges = this.inedges, hull = this.hull, _hullIndex = this._hullIndex, halfedges = this.halfedges, triangles = this.triangles, collinear = this.collinear; // degenerate case with several collinear points\n            if (!collinear) {\n              _context.next = 10;\n              break;\n            }\n            l = collinear.indexOf(i);\n            if (!(l > 0)) {\n              _context.next = 6;\n              break;\n            }\n            _context.next = 6;\n            return collinear[l - 1];\n          case 6:\n            if (!(l < collinear.length - 1)) {\n              _context.next = 9;\n              break;\n            }\n            _context.next = 9;\n            return collinear[l + 1];\n          case 9:\n            return _context.abrupt(\"return\");\n          case 10:\n            e0 = inedges[i];\n            if (!(e0 === -1)) {\n              _context.next = 13;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 13:\n            // coincident point\n            e = e0, p0 = -1;\n          case 14:\n            _context.next = 16;\n            return p0 = triangles[e];\n          case 16:\n            e = e % 3 === 2 ? e - 2 : e + 1;\n            if (!(triangles[e] !== i)) {\n              _context.next = 19;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 19:\n            // bad triangulation\n            e = halfedges[e];\n            if (!(e === -1)) {\n              _context.next = 26;\n              break;\n            }\n            p = hull[(_hullIndex[i] + 1) % hull.length];\n            if (!(p !== p0)) {\n              _context.next = 25;\n              break;\n            }\n            _context.next = 25;\n            return p;\n          case 25:\n            return _context.abrupt(\"return\");\n          case 26:\n            if (e !== e0) {\n              _context.next = 14;\n              break;\n            }\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }, neighbors, this);\n    })\n  }, {\n    key: \"find\",\n    value: function find(x, y) {\n      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n      var i0 = i;\n      var c;\n      while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n      return c;\n    }\n  }, {\n    key: \"_step\",\n    value: function _step(i, x, y) {\n      var inedges = this.inedges,\n        hull = this.hull,\n        _hullIndex = this._hullIndex,\n        halfedges = this.halfedges,\n        triangles = this.triangles,\n        points = this.points;\n      if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n      var c = i;\n      var dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n      var e0 = inedges[i];\n      var e = e0;\n      do {\n        var t = triangles[e];\n        var dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n        if (dt < dc) dc = dt, c = t;\n        e = e % 3 === 2 ? e - 2 : e + 1;\n        if (triangles[e] !== i) break; // bad triangulation\n        e = halfedges[e];\n        if (e === -1) {\n          e = hull[(_hullIndex[i] + 1) % hull.length];\n          if (e !== t) {\n            if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n          }\n          break;\n        }\n      } while (e !== e0);\n      return c;\n    }\n  }, {\n    key: \"render\",\n    value: function render(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points,\n        halfedges = this.halfedges,\n        triangles = this.triangles;\n      for (var i = 0, n = halfedges.length; i < n; ++i) {\n        var j = halfedges[i];\n        if (j < i) continue;\n        var ti = triangles[i] * 2;\n        var tj = triangles[j] * 2;\n        context.moveTo(points[ti], points[ti + 1]);\n        context.lineTo(points[tj], points[tj + 1]);\n      }\n      this.renderHull(context);\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderPoints\",\n    value: function renderPoints(context, r) {\n      if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n      r = r == undefined ? 2 : +r;\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points;\n      for (var i = 0, n = points.length; i < n; i += 2) {\n        var x = points[i],\n          y = points[i + 1];\n        context.moveTo(x + r, y);\n        context.arc(x, y, r, 0, tau);\n      }\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderHull\",\n    value: function renderHull(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var hull = this.hull,\n        points = this.points;\n      var h = hull[0] * 2,\n        n = hull.length;\n      context.moveTo(points[h], points[h + 1]);\n      for (var i = 1; i < n; ++i) {\n        var _h = 2 * hull[i];\n        context.lineTo(points[_h], points[_h + 1]);\n      }\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"hullPolygon\",\n    value: function hullPolygon() {\n      var polygon = new Polygon();\n      this.renderHull(polygon);\n      return polygon.value();\n    }\n  }, {\n    key: \"renderTriangle\",\n    value: function renderTriangle(i, context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points,\n        triangles = this.triangles;\n      var t0 = triangles[i *= 3] * 2;\n      var t1 = triangles[i + 1] * 2;\n      var t2 = triangles[i + 2] * 2;\n      context.moveTo(points[t0], points[t0 + 1]);\n      context.lineTo(points[t1], points[t1 + 1]);\n      context.lineTo(points[t2], points[t2 + 1]);\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"trianglePolygons\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function trianglePolygons() {\n      var triangles, i, n;\n      return _regeneratorRuntime().wrap(function trianglePolygons$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            triangles = this.triangles;\n            i = 0, n = triangles.length / 3;\n          case 2:\n            if (!(i < n)) {\n              _context2.next = 8;\n              break;\n            }\n            _context2.next = 5;\n            return this.trianglePolygon(i);\n          case 5:\n            ++i;\n            _context2.next = 2;\n            break;\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, trianglePolygons, this);\n    })\n  }, {\n    key: \"trianglePolygon\",\n    value: function trianglePolygon(i) {\n      var polygon = new Polygon();\n      this.renderTriangle(i, polygon);\n      return polygon.value();\n    }\n  }], [{\n    key: \"from\",\n    value: function from(points) {\n      var fx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pointX;\n      var fy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : pointY;\n      var that = arguments.length > 3 ? arguments[3] : undefined;\n      return new Delaunay(\"length\" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));\n    }\n  }]);\n  return Delaunay;\n}();\nexport { Delaunay as default };\nfunction flatArray(points, fx, fy, that) {\n  var n = points.length;\n  var array = new Float64Array(n * 2);\n  for (var i = 0; i < n; ++i) {\n    var p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\nfunction flatIterable(points, fx, fy, that) {\n  var i, _iterator, _step2, p;\n  return _regeneratorRuntime().wrap(function flatIterable$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        i = 0;\n        _iterator = _createForOfIteratorHelper(points);\n        _context3.prev = 2;\n        _iterator.s();\n      case 4:\n        if ((_step2 = _iterator.n()).done) {\n          _context3.next = 13;\n          break;\n        }\n        p = _step2.value;\n        _context3.next = 8;\n        return fx.call(that, p, i, points);\n      case 8:\n        _context3.next = 10;\n        return fy.call(that, p, i, points);\n      case 10:\n        ++i;\n      case 11:\n        _context3.next = 4;\n        break;\n      case 13:\n        _context3.next = 18;\n        break;\n      case 15:\n        _context3.prev = 15;\n        _context3.t0 = _context3[\"catch\"](2);\n        _iterator.e(_context3.t0);\n      case 18:\n        _context3.prev = 18;\n        _iterator.f();\n        return _context3.finish(18);\n      case 21:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, _marked, null, [[2, 15, 18, 21]]);\n}","map":{"version":3,"names":["flatIterable","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","Delaunator","Path","Polygon","Voronoi","tau","Math","PI","pow","pointX","p","pointY","collinear","d","triangles","coords","a","b","c","cross","jitter","x","y","r","sin","cos","Delaunay","points","_classCallCheck","_delaunator","inedges","Int32Array","_hullIndex","_init","_createClass","update","hull","from","_","sort","j","e","f","bounds","hypot","n","halfedges","fill","hullIndex","voronoi","neighbors","l","e0","p0","neighbors$","_context","indexOf","find","arguments","i0","_step","dc","t","dt","render","buffer","ti","tj","moveTo","lineTo","renderHull","renderPoints","arc","h","closePath","hullPolygon","polygon","renderTriangle","t0","t1","t2","trianglePolygons","trianglePolygons$","_context2","trianglePolygon","fx","fy","that","flatArray","Float64Array","default","array","_iterator","_step2","flatIterable$","_context3","_createForOfIteratorHelper","s","_marked"],"sources":["/Users/yanguangjing/Desktop/infovis-assignment-2/node_modules/d3-delaunay/src/delaunay.js"],"sourcesContent":["import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}