{"ast":null,"code":"var _jsxFileName = \"/Users/yanguangjing/Downloads/snu-infovis-assn-2-skeleton-master/src/components/TableView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableView = props => {\n  _s();\n\n  const {\n    movieData,\n    brushedIndex\n  } = props; //console.log(`brushed:${brushedIndex}`);\n  //let tableData = [];\n\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    //console.log(brushedIndex);\n    let data = [];\n    brushedIndex.forEach(element => {\n      data.push(movieData[element]);\n    });\n    setTableData(data);\n    console.log(tableData);\n  }, [brushedIndex]);\n  const columns = [{\n    title: 'title',\n    field: 'title'\n  }, {\n    title: 'genre',\n    field: 'genre'\n  }, {\n    title: 'creative_type',\n    field: 'creative_type'\n  }, {\n    title: 'release',\n    field: 'release'\n  }, {\n    title: 'rating',\n    field: 'rating'\n  }];\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    columns: columns,\n    data: tableData // editable={{\n    //   onRowUpdate: (newData, oldData) =>\n    //     new Promise((resolve, reject) => {\n    //       setTimeout(() => {\n    //         const dataUpdate = [...tableData];\n    //         const index = oldData.tableData.id;\n    //         dataUpdate[index] = newData;\n    //         setTableData([...dataUpdate]);\n    //         resolve();\n    //       }, 1000)\n    //     }),\n    // }}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TableView, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n\n_c = TableView;\nexport default TableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableView\");","map":{"version":3,"sources":["/Users/yanguangjing/Downloads/snu-infovis-assn-2-skeleton-master/src/components/TableView.js"],"names":["React","useState","useEffect","MaterialTable","TableView","props","movieData","brushedIndex","tableData","setTableData","data","forEach","element","push","console","log","columns","title","field"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAU;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BF,KAApC,CAD0B,CAE1B;AACA;;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIQ,IAAI,GAAG,EAAX;AACAH,IAAAA,YAAY,CAACI,OAAb,CAAqBC,OAAO,IAAI;AAC9BF,MAAAA,IAAI,CAACG,IAAL,CAAUP,SAAS,CAACM,OAAD,CAAnB;AACD,KAFD;AAGAH,IAAAA,YAAY,CAACC,IAAD,CAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACF,GARS,EAQP,CAACD,YAAD,CARO,CAAT;AAUA,QAAMS,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAJc,EAKd;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GALc,CAAhB;AAQA,sBACE,QAAC,aAAD;AACM,IAAA,OAAO,EAAEF,OADf;AAEM,IAAA,IAAI,EAAER,SAFZ,CAGM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdN;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA5CD;;GAAMJ,S;;KAAAA,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\n\nconst TableView = (props) =>{\n  const { movieData, brushedIndex } = props;\n  //console.log(`brushed:${brushedIndex}`);\n  //let tableData = [];\n  const [tableData, setTableData] = useState([])\n\n  useEffect(() => {\n    //console.log(brushedIndex);\n    let data = []\n    brushedIndex.forEach(element => {\n      data.push(movieData[element]);\n    });\n    setTableData(data);\n    console.log(tableData);\n\t}, [brushedIndex]);\n\n  const columns = [\n    { title: 'title', field: 'title' },\n    { title: 'genre', field: 'genre' },\n    { title: 'creative_type', field: 'creative_type' },\n    { title: 'release', field: 'release' },\n    { title: 'rating',field: 'rating' }\n  ];\n\n  return(\n    <MaterialTable\n          columns={columns}\n          data={tableData}\n          // editable={{\n          //   onRowUpdate: (newData, oldData) =>\n          //     new Promise((resolve, reject) => {\n          //       setTimeout(() => {\n          //         const dataUpdate = [...tableData];\n          //         const index = oldData.tableData.id;\n          //         dataUpdate[index] = newData;\n          //         setTableData([...dataUpdate]);\n          //         resolve();\n          //       }, 1000)\n          //     }),\n          // }}\n        />\n  )\n\n\n}\n\nexport default TableView;"]},"metadata":{},"sourceType":"module"}