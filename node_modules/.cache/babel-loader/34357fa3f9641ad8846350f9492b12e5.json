{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yanguangjing/Desktop/infovis-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/yanguangjing/Desktop/infovis-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/yanguangjing/Desktop/infovis-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanguangjing/Desktop/infovis-assignment-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nvar Voronoi = /*#__PURE__*/function () {\n  function Voronoi(delaunay) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 960, 500],\n      _ref2 = _slicedToArray(_ref, 4),\n      xmin = _ref2[0],\n      ymin = _ref2[1],\n      xmax = _ref2[2],\n      ymax = _ref2[3];\n    _classCallCheck(this, Voronoi);\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  _createClass(Voronoi, [{\n    key: \"update\",\n    value: function update() {\n      this.delaunay.update();\n      this._init();\n      return this;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this$delaunay = this.delaunay,\n        points = _this$delaunay.points,\n        hull = _this$delaunay.hull,\n        triangles = _this$delaunay.triangles,\n        vectors = this.vectors;\n\n      // Compute circumcenters.\n      var circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n      for (var i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n        var t1 = triangles[i] * 2;\n        var t2 = triangles[i + 1] * 2;\n        var t3 = triangles[i + 2] * 2;\n        var _x = points[t1];\n        var _y = points[t1 + 1];\n        var x2 = points[t2];\n        var y2 = points[t2 + 1];\n        var x3 = points[t3];\n        var y3 = points[t3 + 1];\n        var dx = x2 - _x;\n        var dy = y2 - _y;\n        var ex = x3 - _x;\n        var ey = y3 - _y;\n        var ab = (dx * ey - dy * ex) * 2;\n        if (Math.abs(ab) < 1e-9) {\n          // degenerate case (collinear diagram)\n          // almost equal points (degenerate triangle)\n          // the circumcenter is at the infinity, in a\n          // direction that is:\n          // 1. orthogonal to the halfedge.\n          var a = 1e9;\n          // 2. points away from the center; since the list of triangles starts\n          // in the center, the first point of the first triangle\n          // will be our reference\n          var r = triangles[0] * 2;\n          a *= Math.sign((points[r] - _x) * ey - (points[r + 1] - _y) * ex);\n          x = (_x + x3) / 2 - a * ey;\n          y = (_y + y3) / 2 + a * ex;\n        } else {\n          var d = 1 / ab;\n          var bl = dx * dx + dy * dy;\n          var cl = ex * ex + ey * ey;\n          x = _x + (ey * bl - dy * cl) * d;\n          y = _y + (dx * cl - ex * bl) * d;\n        }\n        circumcenters[j] = x;\n        circumcenters[j + 1] = y;\n      }\n\n      // Compute exterior cell rays.\n      var h = hull[hull.length - 1];\n      var p0,\n        p1 = h * 4;\n      var x0,\n        x1 = points[2 * h];\n      var y0,\n        y1 = points[2 * h + 1];\n      vectors.fill(0);\n      for (var _i = 0; _i < hull.length; ++_i) {\n        h = hull[_i];\n        p0 = p1, x0 = x1, y0 = y1;\n        p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n        vectors[p0 + 2] = vectors[p1] = y0 - y1;\n        vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var _this$delaunay2 = this.delaunay,\n        halfedges = _this$delaunay2.halfedges,\n        inedges = _this$delaunay2.inedges,\n        hull = _this$delaunay2.hull,\n        circumcenters = this.circumcenters,\n        vectors = this.vectors;\n      if (hull.length <= 1) return null;\n      for (var i = 0, n = halfedges.length; i < n; ++i) {\n        var j = halfedges[i];\n        if (j < i) continue;\n        var ti = Math.floor(i / 3) * 2;\n        var tj = Math.floor(j / 3) * 2;\n        var xi = circumcenters[ti];\n        var yi = circumcenters[ti + 1];\n        var xj = circumcenters[tj];\n        var yj = circumcenters[tj + 1];\n        this._renderSegment(xi, yi, xj, yj, context);\n      }\n      var h0,\n        h1 = hull[hull.length - 1];\n      for (var _i2 = 0; _i2 < hull.length; ++_i2) {\n        h0 = h1, h1 = hull[_i2];\n        var t = Math.floor(inedges[h1] / 3) * 2;\n        var x = circumcenters[t];\n        var y = circumcenters[t + 1];\n        var v = h0 * 4;\n        var p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n        if (p) this._renderSegment(x, y, p[0], p[1], context);\n      }\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderBounds\",\n    value: function renderBounds(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderCell\",\n    value: function renderCell(i, context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this._clip(i);\n      if (points === null || !points.length) return;\n      context.moveTo(points[0], points[1]);\n      var n = points.length;\n      while (points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1) n -= 2;\n      for (var _i3 = 2; _i3 < n; _i3 += 2) {\n        if (points[_i3] !== points[_i3 - 2] || points[_i3 + 1] !== points[_i3 - 1]) context.lineTo(points[_i3], points[_i3 + 1]);\n      }\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"cellPolygons\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function cellPolygons() {\n      var points, i, n, cell;\n      return _regeneratorRuntime().wrap(function cellPolygons$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            points = this.delaunay.points;\n            i = 0, n = points.length / 2;\n          case 2:\n            if (!(i < n)) {\n              _context.next = 11;\n              break;\n            }\n            cell = this.cellPolygon(i);\n            if (!cell) {\n              _context.next = 8;\n              break;\n            }\n            cell.index = i;\n            _context.next = 8;\n            return cell;\n          case 8:\n            ++i;\n            _context.next = 2;\n            break;\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, cellPolygons, this);\n    })\n  }, {\n    key: \"cellPolygon\",\n    value: function cellPolygon(i) {\n      var polygon = new Polygon();\n      this.renderCell(i, polygon);\n      return polygon.value();\n    }\n  }, {\n    key: \"_renderSegment\",\n    value: function _renderSegment(x0, y0, x1, y1, context) {\n      var S;\n      var c0 = this._regioncode(x0, y0);\n      var c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n      } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n        context.moveTo(S[0], S[1]);\n        context.lineTo(S[2], S[3]);\n      }\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(i, x, y) {\n      if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n      return this.delaunay._step(i, x, y) === i;\n    }\n  }, {\n    key: \"neighbors\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function neighbors(i) {\n      var ci, _iterator, _step, j, cj, ai, li, aj, lj;\n      return _regeneratorRuntime().wrap(function neighbors$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            ci = this._clip(i);\n            if (!ci) {\n              _context2.next = 33;\n              break;\n            }\n            _iterator = _createForOfIteratorHelper(this.delaunay.neighbors(i));\n            _context2.prev = 3;\n            _iterator.s();\n          case 5:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 25;\n              break;\n            }\n            j = _step.value;\n            cj = this._clip(j); // find the common edge\n            if (!cj) {\n              _context2.next = 23;\n              break;\n            }\n            ai = 0, li = ci.length;\n          case 10:\n            if (!(ai < li)) {\n              _context2.next = 23;\n              break;\n            }\n            aj = 0, lj = cj.length;\n          case 12:\n            if (!(aj < lj)) {\n              _context2.next = 20;\n              break;\n            }\n            if (!(ci[ai] == cj[aj] && ci[ai + 1] == cj[aj + 1] && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj])) {\n              _context2.next = 17;\n              break;\n            }\n            _context2.next = 16;\n            return j;\n          case 16:\n            return _context2.abrupt(\"break\", 23);\n          case 17:\n            aj += 2;\n            _context2.next = 12;\n            break;\n          case 20:\n            ai += 2;\n            _context2.next = 10;\n            break;\n          case 23:\n            _context2.next = 5;\n            break;\n          case 25:\n            _context2.next = 30;\n            break;\n          case 27:\n            _context2.prev = 27;\n            _context2.t0 = _context2[\"catch\"](3);\n            _iterator.e(_context2.t0);\n          case 30:\n            _context2.prev = 30;\n            _iterator.f();\n            return _context2.finish(30);\n          case 33:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, neighbors, this, [[3, 27, 30, 33]]);\n    })\n  }, {\n    key: \"_cell\",\n    value: function _cell(i) {\n      var circumcenters = this.circumcenters,\n        _this$delaunay3 = this.delaunay,\n        inedges = _this$delaunay3.inedges,\n        halfedges = _this$delaunay3.halfedges,\n        triangles = _this$delaunay3.triangles;\n      var e0 = inedges[i];\n      if (e0 === -1) return null; // coincident point\n      var points = [];\n      var e = e0;\n      do {\n        var t = Math.floor(e / 3);\n        points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n        e = e % 3 === 2 ? e - 2 : e + 1;\n        if (triangles[e] !== i) break; // bad triangulation\n        e = halfedges[e];\n      } while (e !== e0 && e !== -1);\n      return points;\n    }\n  }, {\n    key: \"_clip\",\n    value: function _clip(i) {\n      // degenerate case (1 valid point: return the box)\n      if (i === 0 && this.delaunay.hull.length === 1) {\n        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n      }\n      var points = this._cell(i);\n      if (points === null) return null;\n      var V = this.vectors;\n      var v = i * 4;\n      return V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points);\n    }\n  }, {\n    key: \"_clipFinite\",\n    value: function _clipFinite(i, points) {\n      var n = points.length;\n      var P = null;\n      var x0,\n        y0,\n        x1 = points[n - 2],\n        y1 = points[n - 1];\n      var c0,\n        c1 = this._regioncode(x1, y1);\n      var e0,\n        e1 = 0;\n      for (var j = 0; j < n; j += 2) {\n        x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n        c0 = c1, c1 = this._regioncode(x1, y1);\n        if (c0 === 0 && c1 === 0) {\n          e0 = e1, e1 = 0;\n          if (P) P.push(x1, y1);else P = [x1, y1];\n        } else {\n          var S = void 0,\n            sx0 = void 0,\n            sy0 = void 0,\n            sx1 = void 0,\n            sy1 = void 0;\n          if (c0 === 0) {\n            if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n            var _S = S;\n            var _S2 = _slicedToArray(_S, 4);\n            sx0 = _S2[0];\n            sy0 = _S2[1];\n            sx1 = _S2[2];\n            sy1 = _S2[3];\n          } else {\n            if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n            var _S3 = S;\n            var _S4 = _slicedToArray(_S3, 4);\n            sx1 = _S4[0];\n            sy1 = _S4[1];\n            sx0 = _S4[2];\n            sy0 = _S4[3];\n            e0 = e1, e1 = this._edgecode(sx0, sy0);\n            if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n            if (P) P.push(sx0, sy0);else P = [sx0, sy0];\n          }\n          e0 = e1, e1 = this._edgecode(sx1, sy1);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx1, sy1);else P = [sx1, sy1];\n        }\n      }\n      if (P) {\n        e0 = e1, e1 = this._edgecode(P[0], P[1]);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n      } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n      }\n      return P;\n    }\n  }, {\n    key: \"_clipSegment\",\n    value: function _clipSegment(x0, y0, x1, y1, c0, c1) {\n      while (true) {\n        if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n        if (c0 & c1) return null;\n        var x = void 0,\n          y = void 0,\n          c = c0 || c1;\n        if (c & 8) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;else if (c & 4) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;else if (c & 2) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n        if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n      }\n    }\n  }, {\n    key: \"_clipInfinite\",\n    value: function _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n      var P = Array.from(points),\n        p;\n      if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n      if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n      if (P = this._clipFinite(i, P)) {\n        for (var j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n          c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n          if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n        }\n      } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n        P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n      }\n      return P;\n    }\n  }, {\n    key: \"_edge\",\n    value: function _edge(i, e0, e1, P, j) {\n      while (e0 !== e1) {\n        var x = void 0,\n          y = void 0;\n        switch (e0) {\n          case 5:\n            e0 = 4;\n            continue;\n          // top-left\n          case 4:\n            e0 = 6, x = this.xmax, y = this.ymin;\n            break;\n          // top\n          case 6:\n            e0 = 2;\n            continue;\n          // top-right\n          case 2:\n            e0 = 10, x = this.xmax, y = this.ymax;\n            break;\n          // right\n          case 10:\n            e0 = 8;\n            continue;\n          // bottom-right\n          case 8:\n            e0 = 9, x = this.xmin, y = this.ymax;\n            break;\n          // bottom\n          case 9:\n            e0 = 1;\n            continue;\n          // bottom-left\n          case 1:\n            e0 = 5, x = this.xmin, y = this.ymin;\n            break;\n          // left\n        }\n        // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n        // undefined, the conditional statement will be executed.\n        if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n          P.splice(j, 0, x, y), j += 2;\n        }\n      }\n      if (P.length > 4) {\n        for (var _i4 = 0; _i4 < P.length; _i4 += 2) {\n          var _j = (_i4 + 2) % P.length,\n            k = (_i4 + 4) % P.length;\n          if (P[_i4] === P[_j] && P[_j] === P[k] || P[_i4 + 1] === P[_j + 1] && P[_j + 1] === P[k + 1]) P.splice(_j, 2), _i4 -= 2;\n        }\n      }\n      return j;\n    }\n  }, {\n    key: \"_project\",\n    value: function _project(x0, y0, vx, vy) {\n      var t = Infinity,\n        c,\n        x,\n        y;\n      if (vy < 0) {\n        // top\n        if (y0 <= this.ymin) return null;\n        if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n      } else if (vy > 0) {\n        // bottom\n        if (y0 >= this.ymax) return null;\n        if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n      }\n      if (vx > 0) {\n        // right\n        if (x0 >= this.xmax) return null;\n        if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n      } else if (vx < 0) {\n        // left\n        if (x0 <= this.xmin) return null;\n        if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n      }\n      return [x, y];\n    }\n  }, {\n    key: \"_edgecode\",\n    value: function _edgecode(x, y) {\n      return (x === this.xmin ? 1 : x === this.xmax ? 2 : 0) | (y === this.ymin ? 4 : y === this.ymax ? 8 : 0);\n    }\n  }, {\n    key: \"_regioncode\",\n    value: function _regioncode(x, y) {\n      return (x < this.xmin ? 1 : x > this.xmax ? 2 : 0) | (y < this.ymin ? 4 : y > this.ymax ? 8 : 0);\n    }\n  }]);\n  return Voronoi;\n}();\nexport { Voronoi as default };","map":{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","Path","Polygon","Voronoi","delaunay","_ref","arguments","_ref2","_slicedToArray","xmin","ymin","xmax","ymax","_classCallCheck","_circumcenters","Float64Array","points","vectors","_init","_createClass","update","_this$delaunay","hull","triangles","circumcenters","subarray","j","n","x","y","t1","t2","t3","x1","y1","x2","y2","x3","y3","dx","dy","ex","ey","ab","Math","abs","a","r","sign","d","bl","cl","h","p0","p1","x0","y0","fill","render","buffer","_this$delaunay2","halfedges","inedges","ti","floor","tj","xi","yi","xj","yj","_renderSegment","h0","h1","t","v","p","_project","renderBounds","rect","renderCell","_clip","moveTo","lineTo","closePath","cellPolygons","cell","cellPolygons$","_context","cellPolygon","index","polygon","S","c0","_regioncode","c1","_clipSegment","contains","_step","neighbors","ci","_iterator","cj","ai","li","aj","lj","neighbors$","_context2","_createForOfIteratorHelper","s","t0","e","f","_cell","_this$delaunay3","e0","V","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_S","_S2","_S3","_S4","_edgecode","_edge","c","vx0","vy0","vxn","vyn","Array","from","unshift","splice","k","vx","vy","Infinity","default"],"sources":["/Users/yanguangjing/Desktop/infovis-assignment-2/node_modules/d3-delaunay/src/voronoi.js"],"sourcesContent":["import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // degenerate case (collinear diagram)\n        // almost equal points (degenerate triangle)\n        // the circumcenter is at the infinity, in a\n        // direction that is:\n        // 1. orthogonal to the halfedge.\n        let a = 1e9;\n        // 2. points away from the center; since the list of triangles starts\n        // in the center, the first point of the first triangle\n        // will be our reference\n        const r = triangles[0] * 2;\n        a *= Math.sign((points[r] - x1) * ey - (points[r + 1] - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}