{"version":3,"sources":["components/ControlPanel.js","components/Mainplot.js","components/TableView.js","App.js","index.js"],"names":["ControlPanel","props","setdata","nominal","ordinal","quantitativeOptions","quantitative","map","d","value","label","ordinalOptions","nominalOptions","colorOptions","concat","opacityOptions","_useState","useState","_useState2","_slicedToArray","xPosition","setXPosition","_useState3","_useState4","yPosition","setYPosition","_useState5","_useState6","color","setColor","_useState7","_useState8","opacity","setOpacity","_useState9","_useState10","size","setSize","useEffect","_jsx","_Fragment","children","_jsxs","className","style","marginRight","Select","defaultValue","options","onChange","selectedOption","Mainplot","width","height","margin","pointSize","maxPointSize","data","movieData","setBrushedIndex","svgWidth","svgHeight","splotSvg","useRef","isUpdate","colors","d3","brush","extent","current","call","move","drawSplot","attr","updateSplot","xExtent","parseFloat","yExtent","xScale","domain","range","yScale","xAxis","yAxis","svg","append","selectAll","enter","_","i","brushSvg","on","brushed","rExtent","oExtent","rScale","oScale","circleSvg","circle","join","transition","duration","colorMap","Map","forEach","e","has","set","select","get","_ref","selection","_selection","_selection$","x0","y0","_selection$2","x1","y1","insideBrushIdx","xCoor","yCoor","reduce","acc","cur","push","idx","ref","TableView","brushedIndex","tableData","setTableData","element","marginTop","MaterialTable","columns","title","field","toolbar","paging","maxBodyHeight","rowStyle","fontSize","App","setData","display","name","class","movies","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.496be65e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\n\n// props = {\n  // setdata\n  // nominal\n  // ordinal\n  // quantitative\n// }\n\nconst ControlPanel = (props) => {\n  const { setdata, nominal, ordinal, quantitative } = props;\n  // x-position options & y-position options\n  const quantitativeOptions = quantitative.map( d => { return {value: d, label: d} });\n  // color options\n  const ordinalOptions = ordinal.map( d => { return {value: d, label: d} });\n  const nominalOptions = nominal.map( d => { return {value: d, label: d} });\n  const colorOptions = [{value:\"none\", label:\"none\"}].concat(ordinalOptions,nominalOptions);\n  // Opacity & Size options\n  const opacityOptions = [{value:\"none\", label:\"none\"}].concat(quantitativeOptions);\n  // search state\n  const [xPosition, setXPosition] = useState(\"imdb_rating\");\n  const [yPosition, setYPosition] = useState(\"us_gross\");\n  const [color, setColor] = useState(\"none\");\n  const [opacity, setOpacity] = useState(\"none\");\n  const [size, setSize] = useState(\"none\");\n  // selecthandle\n  const xSelector = (selectedOption) => {\n    const {value} = selectedOption;\n    setXPosition(value);\n  };\n  const ySelector = (selectedOption) => {\n    const {value} = selectedOption;\n    setYPosition(value);\n  };\n  const colorSelector = (selectedOption) => {\n    const {value} = selectedOption;\n    setColor(value);\n  }\n  const opacitySelector = (selectedOption) => {\n    const {value} = selectedOption;\n    setOpacity(value);\n  }\n  const sizeSelector = (selectedOption) => {\n    const {value} = selectedOption;\n    setSize(value);\n  }\n\n  //setdata\n  useEffect(() => {\n    setdata({\n      xPosition: xPosition,\n      yPosition: yPosition,\n      color: color,\n      opacity: opacity,\n      size: size\n    });\n  }, [xPosition,yPosition,color,opacity,size]);\n\n  return(\n    <>\n    <div className='ControlPanel'>\n    <div className='ControlPanelItem'>\n        <span style={{marginRight:'10px'}}>{\"x: \"}</span>\n        <Select\n        defaultValue={quantitativeOptions[4]}\n        options={quantitativeOptions}\n        onChange={xSelector}\n        />\n      </div>\n      <div className='ControlPanelItem'>\n        <span style={{marginRight:'10px'}}>{\"y: \"}</span>\n        <Select\n        defaultValue={quantitativeOptions[1]}\n        options={quantitativeOptions}\n        onChange={ySelector}\n        />\n      </div>\n      <div className='ControlPanelItem'>\n        <span style={{marginRight:'10px'}}>{\"Color: \"}</span>\n        <Select\n        defaultValue={colorOptions[0]}\n        options={colorOptions}\n        onChange={colorSelector}\n        />\n      </div>\n      <div className='ControlPanelItem'>\n        <span style={{marginRight:'10px'}}>{\"Opacity: \"}</span>\n        <Select\n        defaultValue={opacityOptions[0]}\n        options={opacityOptions}\n        onChange={opacitySelector}\n        />\n      </div>\n      <div className='ControlPanelItem'>\n        <span style={{marginRight:'10px'}}>{\"Size: \"}</span>\n        <Select\n        defaultValue={opacityOptions[0]}\n        options={opacityOptions}\n        onChange={sizeSelector}\n        />\n      </div>\n    </div>\n      </>\n      )\n};\nexport default ControlPanel;","import React, { useRef, useEffect, useState} from \"react\";\nimport * as d3 from \"d3\";\n\nconst Mainplot = (props) => {\n  const { width, height, margin, pointSize, maxPointSize, data, movieData, setBrushedIndex } = props;\n  const { xPosition, yPosition, color, opacity, size} = data;\n\n  const svgWidth = margin * 2 + width;\n  const svgHeight = margin * 2 + height;\n  const splotSvg = useRef(null);\n  // update state\n  const isUpdate = useRef();\n  const colors = d3.scaleOrdinal(d3.schemeAccent);\n  let brush = d3.brush()\n                .extent([[0, 0], [width, height]])\n                \n  useEffect(() => {\n    if(!isUpdate.current){\n      drawSplot();\n      isUpdate.current = true;\n    }else\n      // remove brush section\n      d3.select(\".brushSvg\").call(brush.move, null);\n      // clear table\n      setBrushedIndex([]);\n      // set stroke\n      d3.selectAll(\"circle\")\n      .attr(\"stroke\", \"none\");\n      updateSplot();\n\t}, [data]);\n\n  const drawSplot = () =>{\n    // set xAxis & yAxis\n    const xExtent = d3.extent(movieData.map(d => parseFloat(d[xPosition])));\n    const yExtent = d3.extent(movieData.map(d => parseFloat(d[yPosition])));\n\n    const xScale  = d3.scaleLinear().domain(xExtent).range([0, width]);\n    const yScale  = d3.scaleLinear().domain(yExtent).range([height, 0]);\n  \n    const xAxis = d3.axisBottom(xScale)\n    const yAxis = d3.axisLeft(yScale)\n    const svg = d3.select(splotSvg.current).attr(\"class\", \"Splot\");\n\n\t\tconst xAxisSvg = d3.select(splotSvg.current)\n\t\t \t.append(\"g\")\n      .attr(\"transform\", `translate(${ margin },${ height + margin })`)\n      .attr(\"class\", \"xAxisSvg\")\n\t\t\n    xAxisSvg.call(xAxis)\n\n\t\tconst yAxisSvg = d3.select(splotSvg.current)\n\t\t  .append(\"g\")\n\t\t  .attr(\"transform\", `translate(${ margin }, ${ margin })`)\n      .attr(\"class\", \"yAxisSvg\")\n\t\t\t\n    yAxisSvg.call(yAxis)\n    // draw circles\n\t\tconst circleSvg = svg.append(\"g\").attr(\"transform\", `translate(${ margin }, ${ margin })`).attr(\"class\", \"circleSvg\")\n\n\t\tcircleSvg.selectAll(\"circle\")\n\t\t\t\t\t\t .data(movieData)\n\t\t\t\t\t\t .enter()\n\t\t\t\t\t\t .append(\"circle\")\n\t\t\t\t\t\t .attr(\"cx\", d => xScale(parseFloat(d[xPosition])))\n\t\t\t\t\t\t .attr(\"cy\", d => yScale(parseFloat(d[yPosition])))\n\t\t\t\t\t\t .attr(\"class\", (_, i) => \"circle\" + i)\n\t\t\t\t\t\t .attr(\"r\", pointSize)\n             .attr(\"fill\", \"black\")\n\n\t\t// set brush\n    const brushSvg = svg.append(\"g\")\n                        .attr(\"transform\", \"translate(\" + props.margin + \",\" + props.margin + \")\")\n                        .attr(\"class\", \"brushSvg\")\n    \n    brush.on(\"start brush end\", brushed)\n    brushSvg.call(brush);\n\n  }\n  // update scatterplot\n  const updateSplot = () =>{\n    // set xAxis & yAxis\n    const xExtent = d3.extent(movieData.map(d => parseFloat(d[xPosition])));\n    const yExtent = d3.extent(movieData.map(d => parseFloat(d[yPosition])));\n\n    const rExtent = d3.extent(movieData.map(d => parseFloat(d[size])));\n    const oExtent = d3.extent(movieData.map(d => parseFloat(d[opacity])));\n\n    const xScale  = d3.scaleLinear().domain(xExtent).range([0, width]);\n    const yScale  = d3.scaleLinear().domain(yExtent).range([height, 0]);\n    const rScale = d3.scaleLinear().domain(rExtent).range([pointSize, maxPointSize]);\n    const oScale = d3.scaleLinear().domain(oExtent).range([0, 1]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const xAxisSvg = d3.select(\".xAxisSvg\")\n    xAxisSvg.call(xAxis);\n    const yAxis = d3.axisLeft(yScale);\n    const yAxisSvg = d3.select(\".yAxisSvg\")\n    yAxisSvg.call(yAxis);\n    // set circles\n    const circleSvg = d3.select(\".circleSvg\")\n    const circle = circleSvg.selectAll(\"circle\")\n    circle.data(movieData)\n    .join()\n    .transition()\n    .duration(100)\n    .attr(\"cx\", d => xScale(parseFloat(d[xPosition])))\n    .attr(\"cy\", d => yScale(parseFloat(d[yPosition])))\n    // set circle radius\n    if(size === \"none\")\n      circle.attr(\"r\",pointSize);\n    else{\n      circle.data(movieData)\n      .join()\n      .attr(\"r\", d => rScale(parseFloat(d[size])))\n    }\n    //set circle opacity\n    if(opacity === \"none\")\n    circle.attr(\"opacity\",1);\n    else{\n    circle.data(movieData)\n    .join()\n    .attr(\"opacity\", d => oScale(parseFloat(d[opacity])))\n    }\n    //set circle color\n    if(color === \"none\")\n      circle.attr(\"fill\",\"black\");\n    else{\n      const colorMap = new Map();\n      movieData.forEach( (e,i) =>{\n        if( colorMap.has(e[color]))\n          return;\n        else\n          colorMap.set(e[color],i);\n      });\n      movieData.forEach( (e,i) =>{\n        circleSvg.select(`.circle${i}`)\n         .attr(\"fill\", e => colors(colorMap.get(e[color])))\n      });\n    }\n    // set brush\n    const brushSvg = d3.select(\".brushSvg\")\n    brush.on(\"start brush end\", brushed);                     \n    brushSvg.call(brush);\n\n}\n\nfunction brushed({selection}) {\n  const xExtent = d3.extent(movieData.map(d => parseFloat(d[xPosition])));\n  const yExtent = d3.extent(movieData.map(d => parseFloat(d[yPosition])));\n\n  const xScale  = d3.scaleLinear().domain(xExtent).range([0, width]);\n  const yScale  = d3.scaleLinear().domain(yExtent).range([height, 0]);\n  if (selection === null) {\n    setBrushedIndex([]);\n    return;\n  }\n  let [[x0, y0], [x1, y1]] = selection;\n\n  const insideBrush = movieData.map((d, i) => {\n    const xCoor = xScale(parseFloat(d[xPosition]));\n    const yCoor = yScale(parseFloat(d[yPosition]));\n    if (xCoor >= x0 && xCoor <= x1 &&\n        yCoor >= y0 && yCoor <= y1\n    ) return true;\n    else return false;\n  })\n\n  const insideBrushIdx = insideBrush.reduce((acc, cur, i) => {\n    if (cur) acc.push(i);\n    return acc;\n  }, []);\n  setBrushedIndex(insideBrushIdx);\n  d3.selectAll(\"circle\").attr(\"stroke\", \"none\");\n  insideBrushIdx.forEach(idx => {\n    d3.selectAll(\".circle\" + idx)\n      .attr(\"stroke\", \"black\")\n  });\t\t\n}\n    \n  return (\n\t\t<div>\n\t\t\t<svg ref={splotSvg} width={svgWidth} height={svgHeight}> \n\t\t\t</svg>\n    </div>\n  )\n}\nexport default Mainplot;","import React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\n\nconst TableView = (props) =>{\n  const { movieData, brushedIndex } = props;\n  const [tableData, setTableData] = useState([])\n\n  useEffect(() => {\n    let data = []\n    brushedIndex.forEach(element => {\n      data.push(movieData[element]);\n    });\n    setTableData(data);\n\t}, [brushedIndex]);\n\n  const columns = [\n    { title: 'title', field: 'title' },\n    { title: 'genre', field: 'genre' },\n    { title: 'creative_type', field: 'creative_type' },\n    { title: 'release', field: 'release' },\n    { title: 'rating',field: 'rating' }\n  ];\n\n  return(\n    <div style={{marginTop: '20px'}}>\n      <MaterialTable\n            columns={columns}\n            data={tableData}\n            options={{\n              toolbar: false,\n              paging: false,\n              maxBodyHeight: 350,\n              rowStyle:{\n                fontSize: 12.5,\n              }\n            }\n            }\n          />\n    </div>\n  )\n\n\n}\n\nexport default TableView;","import React, { useState, useEffect } from \"react\";\n\nimport movies from \"./data/movie.json\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport \"./App.css\";\nimport Mainplot from \"./components/Mainplot\";\nimport TableView from \"./components/TableView\";\n\n\nfunction App() {\n\n  const name = \"Guangjing Yan\";\n  const studentNum = \"2020-2XXXX\";\n\n  const nominal = [\"genre\", \"creative_type\", \"source\"];\n  const ordinal = [\"release\", \"rating\"];\n  const quantitative = [\"budget\", \"us_gross\", \"worldwide_gross\", \"rotten_rating\", \"imdb_rating\", \"imdb_votes\"];\n  \n  const width = 500;\n  const height = 350;\n  const margin = 35;\n  const pointSize = 3;\n  const maxPointSize = 10;\n  // initialize controlpanel data\n  const [data, setData] = useState({\n    xPosition: \"imdb_rating\",\n    yPosition: \"us_gross\",\n    color: \"none\",\n    opacity: \"none\",\n    size: pointSize\n  });\n  // initialize brushed dot index\n  const [brushedIndex, setBrushedIndex] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <div style={{display: \"flex\"}}>\n        <h1 style={{marginRight: 10}}>\n        {\"Assignment #2 /\"}\n        </h1>\n        <h2 style={{marginTop: 25}}>\n          {name + \" (\" + studentNum + \")\"}\n        </h2>\n      </div>\n      <div class=\"ControlPanel\">\n        <ControlPanel\n          setdata = {setData}\n          nominal = {nominal}\n          ordinal = {ordinal}\n          quantitative = {quantitative}\n        />\n      </div>\n      <div className=\"MainWrapper\">\n          <Mainplot\n            width = {width}\n            height = {height}\n            margin = {margin}\n            pointSize = {pointSize}\n            maxPointSize = {maxPointSize}\n            data = {data}\n            movieData = {movies}\n            setBrushedIndex = {setBrushedIndex}\n          />\n          <TableView\n            movieData = {movies}\n            brushedIndex = {brushedIndex}\n          />\n      </div>\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}